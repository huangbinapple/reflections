What happens when you initialize a repository? Why do you need to do it?
	Git will know I want to keep track of this directory, and do some
	preparation for me. I do this, such that I can add a commit of my
	repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	staging area is differ from working directory because: we can add commit to
	a staging area, but not a working directory.
	staging area is differ from repository because: repository is where we store
	multiple commit. staging area is where we try to make a commit of.
	By staging area, we can make sure we can commit one logic change at a time.
	

How can you use the staging area to make sure you have one commit per logical
change?
	If we modified several files and several logical changes, we can first add
	files modified that contribute to one logical change to the staging area and
	commit. then add other filies that contribute to another logical change to
	staging area and commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	When we want to go to different directions. Or when we view our history, we
	may think it would be better if we went thought another way. At above two 
	situation, we can make a new brach, let history's path or make two different
	version of future. What is more excited is we can jump between different version.

How do the diagrams help you visualize the branch structure?
	It can let me know how many branches exist now and how when are they created.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	By merging, we can have the changes happend in either branches appered in the
	merged commmit. We represant it in diagram so we can have a clear view of how
	we merge the files.

What are the pros and cons of Git automatic merging vs. always doing merges
manually?

